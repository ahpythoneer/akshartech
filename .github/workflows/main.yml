name: AksharTech CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    # Install backend dependencies and run tests
    - name: Install backend dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-flask
    
    - name: Run backend tests
      run: |
        cd backend
        pytest
    
    # Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    
    # Install frontend dependencies and run tests
    - name: Install frontend dependencies
      run: |
        cd frontend/akshartech-frontend
        npm install
    
    - name: Run frontend tests
      run: |
        cd frontend/akshartech-frontend
        npm test -- --passWithNoTests
    
    # Build frontend
    - name: Build frontend
      run: |
        cd frontend/akshartech-frontend
        npm run build
  
  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    # Login to GitHub Container Registry
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    # Build and push backend Docker image
    - name: Build and push backend
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: true
        tags: ghcr.io/${{ github.repository }}/backend:latest
    
    # Build and push frontend Docker image
    - name: Build and push frontend
      uses: docker/build-push-action@v2
      with:
        context: ./frontend/akshartech-frontend
        push: true
        tags: ghcr.io/${{ github.repository }}/frontend:latest

  # Create deployment artifacts
  create-deployment-artifacts:
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    # Create production docker-compose file
    - name: Create production docker-compose
      run: |
        cp docker-compose.yml docker-compose.prod.yml
        sed -i 's|build:|image: ghcr.io/${{ github.repository }}/backend:latest|g' docker-compose.prod.yml
        sed -i 's|context: ./backend||g' docker-compose.prod.yml
        sed -i 's|dockerfile: Dockerfile||g' docker-compose.prod.yml
        sed -i 's|build:|image: ghcr.io/${{ github.repository }}/frontend:latest|g' docker-compose.prod.yml
        sed -i 's|context: ./frontend/akshartech-frontend||g' docker-compose.prod.yml
        sed -i 's|dockerfile: Dockerfile||g' docker-compose.prod.yml
    
    # Upload production docker-compose as artifact
    - name: Upload docker-compose.prod.yml
      uses: actions/upload-artifact@v2
      with:
        name: docker-compose-prod
        path: docker-compose.prod.yml
        retention-days: 30

  # Optional Job: Self-hosted deployment
  # To use this job, set up a self-hosted runner on your server
  # https://docs.github.com/en/actions/hosting-your-own-runners/adding-self-hosted-runners
  deploy-self-hosted:
    runs-on: self-hosted
    needs: docker-build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && false # Disabled by default, enable by removing '&& false'
    
    steps:
    - uses: actions/checkout@v2
    
    # Pull the latest images
    - name: Pull latest images
      run: |
        docker pull ghcr.io/${{ github.repository }}/backend:latest
        docker pull ghcr.io/${{ github.repository }}/frontend:latest
    
    # Update the docker-compose file
    - name: Update docker-compose
      run: |
        sed -i 's|build:|image: ghcr.io/${{ github.repository }}/backend:latest|g' docker-compose.yml
        sed -i 's|context: ./backend||g' docker-compose.yml
        sed -i 's|dockerfile: Dockerfile||g' docker-compose.yml
        sed -i 's|build:|image: ghcr.io/${{ github.repository }}/frontend:latest|g' docker-compose.yml
        sed -i 's|context: ./frontend/akshartech-frontend||g' docker-compose.yml
        sed -i 's|dockerfile: Dockerfile||g' docker-compose.yml
    
    # Deploy with docker-compose
    - name: Deploy with docker-compose
      run: |
        docker-compose down
        docker-compose up -d
